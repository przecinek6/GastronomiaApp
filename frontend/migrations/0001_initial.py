# Generated by Django 5.2 on 2025-05-31 18:58

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_resolved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DietPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('weekly_price', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ShoppingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('week_start_date', models.DateField()),
                ('week_end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_completed', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-week_start_date'],
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'System Settings',
            },
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('meal_type', models.CharField(choices=[('breakfast', 'Śniadanie'), ('lunch', 'Obiad'), ('dinner', 'Kolacja'), ('any', 'Dowolny posiłek')], default='any', max_length=20)),
                ('allergens', models.TextField(blank=True, help_text='Lista alergenów oddzielona przecinkami')),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='dishes/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Dishes',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['meal_type', 'is_deleted'], name='frontend_di_meal_ty_a732cd_idx'), models.Index(fields=['created_at'], name='frontend_di_created_e6db45_idx')],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('calories_per_100g', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('protein_per_100g', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('fat_per_100g', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('price_per_100g', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='frontend_in_name_6fdcee_idx'), models.Index(fields=['is_deleted'], name='frontend_in_is_dele_ed47e6_idx')],
            },
        ),
        migrations.CreateModel(
            name='LoyaltyAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_balance', models.IntegerField(default=0)),
                ('total_points_earned', models.IntegerField(default=0)),
                ('loyalty_level', models.CharField(choices=[('bronze', 'Bronze'), ('silver', 'Silver'), ('gold', 'Gold'), ('platinum', 'Platinum')], default='bronze', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReferralProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referral_code', models.CharField(max_length=50, unique=True)),
                ('reward_points', models.IntegerField(default=100)),
                ('status', models.CharField(choices=[('pending', 'Oczekujące'), ('completed', 'Zaliczone'), ('expired', 'Wygasłe')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('referred', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referred_by', to=settings.AUTH_USER_MODEL)),
                ('referrer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals_made', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('duration', models.CharField(choices=[('week', '1 tydzień'), ('month', '1 miesiąc'), ('year', '1 rok')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Oczekująca'), ('active', 'Aktywna'), ('paused', 'Wstrzymana'), ('cancelled', 'Anulowana'), ('completed', 'Zakończona')], default='pending', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=200)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=200)),
                ('delivery_address', models.TextField()),
                ('delivery_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('diet_changes_count', models.IntegerField(default=0)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('diet_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.dietplan')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PointTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
                ('transaction_type', models.CharField(choices=[('purchase', 'Zakup'), ('referral', 'Polecenie'), ('review', 'Opinia'), ('redemption', 'Wykorzystanie'), ('bonus', 'Bonus'), ('adjustment', 'Korekta')], max_length=20)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.loyaltyaccount')),
                ('related_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='frontend.subscription')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_payment_intent_id', models.CharField(max_length=200, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Oczekująca'), ('completed', 'Zakończona'), ('failed', 'Nieudana'), ('refunded', 'Zwrócona')], default='pending', max_length=20)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.subscription')),
            ],
        ),
        migrations.CreateModel(
            name='DietChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_date', models.DateField()),
                ('reason', models.CharField(blank=True, max_length=200)),
                ('price_adjustment', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('status', models.CharField(choices=[('pending', 'Oczekująca'), ('confirmed', 'Potwierdzona'), ('completed', 'Wykonana'), ('cancelled', 'Anulowana')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('new_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='new_changes', to='frontend.dietplan')),
                ('old_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='old_changes', to='frontend.dietplan')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.subscription')),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_date', models.DateField()),
                ('delivery_address', models.TextField()),
                ('status', models.CharField(choices=[('preparing', 'W przygotowaniu'), ('ready', 'Gotowe'), ('in_transit', 'W drodze'), ('delivered', 'Dostarczone'), ('failed', 'Nieudane')], default='preparing', max_length=20)),
                ('delivery_notes', models.TextField(blank=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.subscription')),
            ],
            options={
                'ordering': ['delivery_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('manager', 'Menadżer'), ('client', 'Klient')], default='client', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('address', models.TextField(blank=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DishIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_grams', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.dish')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.ingredient')),
            ],
            options={
                'unique_together': {('dish', 'ingredient')},
            },
        ),
        migrations.CreateModel(
            name='MealPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(1, 'Poniedziałek'), (2, 'Wtorek'), (3, 'Środa'), (4, 'Czwartek'), (5, 'Piątek'), (6, 'Sobota'), (7, 'Niedziela')])),
                ('meal_type', models.CharField(choices=[('breakfast', 'Śniadanie'), ('lunch', 'Obiad'), ('dinner', 'Kolacja')], max_length=20)),
                ('diet_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.dietplan')),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.dish')),
            ],
            options={
                'unique_together': {('diet_plan', 'day_of_week', 'meal_type')},
            },
        ),
        migrations.CreateModel(
            name='ShoppingListItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required_quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('estimated_cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('is_purchased', models.BooleanField(default=False)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.ingredient')),
                ('shopping_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.shoppinglist')),
            ],
            options={
                'unique_together': {('shopping_list', 'ingredient')},
            },
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['client', 'status'], name='frontend_su_client__c1704b_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['start_date', 'end_date'], name='frontend_su_start_d_a0055a_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['status', 'created_at'], name='frontend_su_status_b381b4_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['stripe_subscription_id'], name='frontend_su_stripe__ac4ce4_idx'),
        ),
    ]
